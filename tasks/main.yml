################################################################################
# BSD LICENSE
#
# Copyright(c) 2019-2021 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################
---
# tasks file for install_as_mfence_binaries

# This step is required since the unarchive task does not create the dest dir
- name: Create {{ sgx_as_download_path }} directory
  ansible.builtin.file:
    path: '{{ sgx_as_unarchive_path }}'
    state: directory
    owner: "{{ ansible_user_id }}"
  vars:
    old_version: "{{ (ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_major_version'] | int <= 20) or ansible_facts['os_family'] == 'RedHat' }}"
  when: old_version | bool

- name: Download and extract as mfence extensions
  ansible.builtin.unarchive:
    remote_src: true
    src: '{{ sgx_as_archive_url }}'
    dest: '{{ sgx_as_unarchive_path }}'
  vars:
    old_version: "{{ (ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_major_version'] | int <= 20) or ansible_facts['os_family'] == 'RedHat' }}"
  when: old_version | bool

- name: Set as mfence extensions dir for Ubuntu
  ansible.builtin.set_fact:
    as_mfence_binaries_src_dir: "{{ sgx_as_binaries_src_dir_deb }}"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Set as mfence extensions dir for RHEL
  ansible.builtin.set_fact:
    as_mfence_binaries_src_dir: "{{ sgx_as_binaries_src_dir_rhel }}"
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: Copy binaries with mfence support to /usr/local/bin
  ansible.builtin.copy:
    src: '{{ as_mfence_binaries_src_dir }}/{{ item }}'
    dest: '/usr/local/bin/{{ item }}'
    remote_src: true
    mode: preserve
  with_items:
    - as
    - ld
    - objdump
  become: true
  vars:
    old_version: "{{ (ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution_major_version'] | int <= 20) or ansible_facts['os_family'] == 'RedHat' }}"
  when: old_version | bool
